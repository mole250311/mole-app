from flask import Flask, request, jsonify
import smtplib  # 파이썬 기본 SMTP 라이브러리
from email.mime.text import MIMEText
import random
import mysql.connector  # MySQL 접속 라이브러리

# --- Flask 앱 초기화 ---
app = Flask(__name__)

# --- 1. 서버 설정 (서버 개발자가 실제 값으로 채워야 할 부분) ---
# Gmail SMTP 서버 정보
SMTP_SERVER = "smtp.gmail.com"
SMTP_PORT = 587  # TLS를 위한 표준 포트

# 중요: 실제 이메일 발송에 사용할 구글 계정 정보
# 보안을 위해 반드시 '앱 비밀번호'를 사용해야 합니다.
SMTP_USER = "YOUR_GMAIL_ADDRESS@gmail.com"
SMTP_PASSWORD = "YOUR_16_DIGIT_APP_PASSWORD" 

# 당신이 설계한 MySQL 데이터베이스 접속 정보
DB_CONFIG = {
    'host': '127.0.0.1',
    'database': 'NuSchema',
    'user': 'root',
    'password': 'YOUR_MYSQL_PASSWORD' # 실제 DB 비밀번호
}
# ---------------------------------------------------------

@app.route('/send-auth-code', methods=['POST'])
def send_auth_code():
    """Unity 앱으로부터 이메일 주소를 받아 인증 코드를 발송하는 API"""
    
    # Unity 앱에서 보낸 데이터(JSON)를 받음
    data = request.get_json()
    if not data or 'email' not in data:
        return jsonify({"error": "이메일 주소가 필요합니다."}), 400
    
    email = data['email']
    
    # 2. 6자리 숫자 인증 코드 생성
    auth_code = str(random.randint(100000, 999999))

    # 3. DB에 인증 코드 저장 (당신이 정의한 SQL 규칙 사용)
    try:
        conn = mysql.connector.connect(**DB_CONFIG)
        cursor = conn.cursor()
        
        # 당신이 설계한 '저장 또는 갱신' 쿼리
        save_query = """
            INSERT INTO auth_codes (email, code, created_at)
            VALUES (%s, %s, CURRENT_TIMESTAMP)
            ON DUPLICATE KEY UPDATE code = VALUES(code), created_at = CURRENT_TIMESTAMP
        """
        cursor.execute(save_query, (email, auth_code))
        conn.commit()
        
    except mysql.connector.Error as err:
        print(f"데이터베이스 오류: {err}")
        return jsonify({"error": "서버 내부 오류가 발생했습니다."}), 500
    finally:
        if 'conn' in locals() and conn.is_connected():
            cursor.close()
            conn.close()

    # 4. SMTP를 통해 실제 이메일 발송
    try:
        # 이메일 내용 구성
        msg_body = f"안녕하세요!\n\n요청하신 인증 코드는 아래와 같습니다.\n\n인증 코드: [{auth_code}]\n\n감사합니다."
        msg = MIMEText(msg_body)
        msg['Subject'] = "[내 앱 이름] 이메일 인증 코드 안내"
        msg['From'] = SMTP_USER
        msg['To'] = email

        # SMTP 서버에 연결하여 이메일 발송
        with smtplib.SMTP(SMTP_SERVER, SMTP_PORT) as server:
            server.starttls()  # TLS 암호화 시작
            server.login(SMTP_USER, SMTP_PASSWORD) # 로그인
            server.send_message(msg) # 이메일 전송
            
    except Exception as e:
        print(f"이메일 발송 오류: {e}")
        return jsonify({"error": "이메일 발송에 실패했습니다."}), 500

    # 모든 과정이 성공하면 Unity 앱에 성공 메시지 반환
    return jsonify({"message": "인증 코드가 성공적으로 발송되었습니다."}), 200

if __name__ == '__main__':
    # Flask 서버 실행 (개발용)
    app.run(host='0.0.0.0', port=5000, debug=True)
